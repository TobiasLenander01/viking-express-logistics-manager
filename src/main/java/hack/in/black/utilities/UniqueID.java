/*
 * This class generates a unique ID with a specific length
 * Author: Tobias Lenander
 */

package hack.in.black.utilities;

import java.util.ArrayList;

public class UniqueID {
    // This array keeps track of all the IDs that have been generated by the UniqueID class
    public static final ArrayList<String> EXISTING_IDS = new ArrayList<>();

    // Instance variable for the ID as a string
    private final String id;

    // Instance variable for keeping track of number of tries to generate a unique ID
    private int tries;

    // Constructor for generating a new ID with a specific length
    public UniqueID(int length) {
        this.id = generateID(length);
    }

    // This is a method that generates a new ID with a specific length
    // If the ID already exists, it will recursively call itself until a unique ID is generated
    private String generateID(int length) {
        StringBuilder newId = new StringBuilder();
        String characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";

        for (int i = 0; i < length; i++) {
            int index = (int) (characters.length() * Math.random());
            if (index >= characters.length()) {
                index = characters.length() - 1;
            }
            newId.append(characters.charAt(index));
        }

        if (EXISTING_IDS.contains(newId.toString())) {
            System.out.println("Prevented generation of existing ID");
            if (tries < 50) {
                tries++;
                return generateID(length);
            }
            else {
                System.out.println("Failed to generate unique ID");
                return null;
            }
        }

        EXISTING_IDS.add(newId.toString());
        return newId.toString();
    }

    // Override the toString method to return the id as a string
    @Override
    public String toString() {
        return id;
    }
}
